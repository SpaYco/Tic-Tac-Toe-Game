#!/usr/bin/env ruby
class Game
    def initialize(player1, player2)
        @player1 = player1
        @player2 = player2
    end
    def start
        $moves = {
        "a1" => "a1",
        "a2" => "a2",
        "a3" => "a3",
        "b1" => "b1", 
        "b2" => "b2",
        "b3" => "b3",
        "c1" => "c1",
        "c2" => "c2",
        "c3" => "c3"
        }
        puts "Welcome #{@player1} and #{@player2}"
        puts "Let's start the game"
        puts "here's your current board"
        puts "----------"
        puts "|#{$moves["a1"]}|#{$moves["a2"]}|#{$moves["a3"]}|"
        puts "----------"
        puts "|#{$moves["b1"]}|#{$moves["b2"]}|#{$moves["b3"]}|"
        puts "----------"
        puts "|#{$moves["c1"]}|#{$moves["c2"]}|#{$moves["c3"]}|"
        puts "----------"
        $game_end = false
        # In milestone 3 we will request the players for their next move and assign a cell to each move. Keep looping until someone wins
        # or a tie is made. 
    end
    def add(player, move)
        $moves[move] = "X" if player == @player1 
        $moves[move] = "O" if player == @player2
        puts "please enter a valid move" if player != @player1 && player != @player2
        puts "here's your current board"
        puts "----------"
        puts "|#{$moves["a1"]}|#{$moves["a2"]}|#{$moves["a3"]}|"
        puts "----------"
        puts "|#{$moves["b1"]}|#{$moves["b2"]}|#{$moves["b3"]}|"
        puts "----------"
        puts "|#{$moves["c1"]}|#{$moves["c2"]}|#{$moves["c3"]}|"
        puts "----------"
        # return true or false if the game ends         
    end
    def check
        # this method checks the board each time we make a move.
    end
end

puts "Player1 enter your name: "
input1 = gets.chomp
puts "Player2 enter your name: "
input2 = gets.chomp

new_game = Game.new(input1, input2)
new_game.start



